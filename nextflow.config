/*
 * -------------------------------------------------
 *  Plague Pipeline NextFlow Config File
 * -------------------------------------------------
 * Default Configuration options
 */

// Global Default Parameters
params{
  version = false
  help = false

  // Path to ncbimeta yaml config and db
  ncbimeta_create = false
  ncbimeta_update = false
  ncbimeta_annot = false
  sqlite = false

  // Output directory default
  outdir = "$baseDir/results"

  // Scripts directory
  scriptdir = "$baseDir/scripts"

  // Skip processes
  skip_ncbimeta_db_create = false
  skip_ncbimeta_db_update = false
  skip_sqlite_import = false
  skip_assembly_download = false
  skip_reference_download = false
  skip_snippy_pairwise = false
  skip_snippy_variant_summary = false
  skip_snippy_detect_snp_high_density = false
  skip_reference_detect_repeats = false
  skip_reference_detect_low_complexity = false
  skip_snippy_multi = false
  skip_snippy_multi_filter = false
  skip_modeltest = false
  skip_iqtree = false

  // Other to be sorted
  max_datasets = 100

  // NCBImetaJoin First Parameters
  ncbimeta_join_first_final = "MasterFirst"
  ncbimeta_join_first_uniq = "'BioSampleAccession BioSampleAccessionSecondary BioSampleSRAAccession'"
  ncbimeta_join_first_accessory = "'Assembly SRA Nucleotide'"
  ncbimeta_join_first_anchor = "BioSample"

  // NCBImetaJoin Second Parameters
  ncbimeta_join_second_final = "MasterSecond"
  ncbimeta_join_second_uniq = "'BioSampleAccession BioSampleBioProjectAccession'"
  ncbimeta_join_second_accessory = "'BioProject'"
  ncbimeta_join_second_anchor = "MasterFirst"

  // NCBImetaJoin Third Parameters
  ncbimeta_join_third_final = "Master"
  ncbimeta_join_third_uniq = "'BioSampleAccession BioProjectPublicationID'"
  ncbimeta_join_third_accessory = "'Pubmed'"
  ncbimeta_join_third_anchor = "MasterSecond"

  // NCBImeta parameters
  ncbimeta_output_dir = "output"
  ncbimeta_sqlite_db = "yersinia_pestis_db.sqlite"
  ncbimeta_sqlite_db_latest = "${params.outdir}/ncbimeta_db/update/latest/${params.ncbimeta_output_dir}/database/${params.ncbimeta_sqlite_db}"

  // NCBImetaAnnotate parameters
  ncbimeta_annot_table = "BioSample"

  // Genbank and assembly
  genbank_assembly_gz_suffix = "_genomic.fna.gz"
  genbank_assembly_fna_suffix = "_genomic.fna"
  file_assembly_for_download_ftp = "assembly_for_download.txt"
  reference_genome_fna_ftp = "ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/009/065/GCF_000009065.1_ASM906v1/GCF_000009065.1_ASM906v1_genomic.fna.gz"
  reference_genome_gb_ftp = "ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/009/065/GCF_000009065.1_ASM906v1/GCF_000009065.1_ASM906v1_genomic.gbff.gz"
  reference_genome_gff_ftp = "ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/009/065/GCF_000009065.1_ASM906v1/GCF_000009065.1_ASM906v1_genomic.gff.gz"


  // Snippy Parameters
  snippy_ctg_depth = 10
  snippy_map_qual = 30
  snippy_min_frac = 0.9
  snippy_base_qual = 20
  snippy_mask_char = 'N'

  // SnpEff Parameters
  snpeff_db = 'Yersinia_pestis_co92'

  // Snippy summary files
  snippy_variant_summary = "snippy_variant_summary"

  // Snippy filtering
  snippy_snp_density_window = 10
  snippy_variant_density = "snippy_variant_density"
  snippy_multi_missing_data = 0.05
  snippy_multi_missing_data_text = 5

  // IQTREE Parameters
  // Change outgroup from reference later
  iqtree_outgroup = "GCF_000009065.1_ASM906v1_genomic"
  iqtree_rng = "4154541355"

  // SQLite q
  // sqlite_select_command = "\'SELECT AssemblyFTPGenbank FROM Master WHERE BioSampleComment NOT LIKE \"%REMOVE%\"\'"
  sqlite_select_command = "\"SELECT AssemblyFTPGenbank FROM Master WHERE (BioSampleComment NOT LIKE \'%REMOVE%\') AND (TRIM(BioSampleHost) > \'\') AND (TRIM(LOWER(BioSampleHost)) IS NOT \'missing\') AND (TRIM(BioSampleCollectionDate) > \'\') AND (TRIM(LOWER(BioSampleCollectionDate)) IS NOT \'missing\' AND TRIM(LOWER(BioSampleCollectionDate)) IS NOT \'not applicable\' AND TRIM(LOWER(BioSampleCollectionDate)) IS NOT \'unknown\' AND TRIM(LOWER(BioSampleCollectionDate)) IS NOT \'n/a\' ) AND (TRIM(BioSampleGeographicLocation) > '') AND (TRIM(LOWER(BioSampleCollectionDate)) IS NOT \'missing\') AND (TRIM(LOWER(BioSampleCollectionDate)) IS NOT \'missing\') AND (TRIM(AssemblyFTPGenbank) > \'\') \""

  // MultiQC
  multiqc_config = "$baseDir/multiqc_config.yaml"

  // Sys resource defaults only, expecting to be overwritten
  max_memory = 8.GB
  max_cpus = 4
  max_time = 48.h

}

// Executor
executor{

  name = 'local'
  queueSize = 10
  cpus = 10
  memory = '64 GB'

}

// Process
process{

  cpus = 3
  memory = 8.GB

}


// Manifest and publishing
manifest {
  name = 'Plague Pipeline'
  author = 'Katherine Eaton'
  homePage = 'https://github.com/ktmeaton/paper-phylogeography'
  version = '0.1.0'
  description = 'Plague Phylogeography Pipeline'
  mainScript = 'pipeline.nf'
  nextflowVersion = '>=20.01.0'
}

// Process
//process.conda = "$baseDir/phylo-env.yaml"


// Function to ensure that resource requirements don't go beyond
// a maximum limit. From nf-core/eager
def check_max(obj, type) {
  if (type == 'memory') {
    try {
      if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'time') {
    try {
      if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'cpus') {
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}
